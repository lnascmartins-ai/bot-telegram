import logging
import requests
from flask import Flask, request
from datetime import datetime

# --- CONFIGURA√á√ïES ---
TOKEN = "7533353385:AAEbr_KGJY1S6YA6y0gmsDpa8igEuFQdAbI"
CHAT_ID = "6906485579"
API_FOOTBALL_KEY = "40cd52c15b6d3b42c73781e7b8809843"

API_FOOTBALL_URL = "https://v3.football.api-sports.io/fixtures"

# IDs das ligas (API-Football)
LEAGUE_IDS = {
    "Premier League": 39,
    "Serie A": 135,
    "Bundesliga 1": 78,
    "Bundesliga 2": 79
}

app = Flask(__name__)
logging.basicConfig(level=logging.INFO)

# --- FUN√á√ÉO PARA ENVIAR MENSAGEM NO TELEGRAM ---
def send_message(text):
    url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
    data = {"chat_id": CHAT_ID, "text": text}
    requests.post(url, data=data)

# --- FUN√á√ÉO PARA CONSULTAR JOGOS AO VIVO ---
def get_live_matches():
    headers = {"x-apisports-key": API_FOOTBALL_KEY}
    params = {"live": "all"}

    response = requests.get(API_FOOTBALL_URL, headers=headers, params=params)
    data = response.json()

    if data.get("response"):
        for match in data["response"]:
            league_id = match["league"]["id"]
            if league_id in LEAGUE_IDS.values():
                home = match["teams"]["home"]["name"]
                away = match["teams"]["away"]["name"]
                goals_home = match["goals"]["home"]
                goals_away = match["goals"]["away"]
                time = match["fixture"]["status"]["elapsed"]
                referee = match["fixture"]["referee"] or "Desconhecido"
                weather = match["fixture"].get("weather", {}).get("description", "N/A")

                alert = f"üèüÔ∏è {home} x {away}\n"
                alert += f"‚è±Ô∏è Minuto: {time}‚Äô\n"
                alert += f"üìä Placar: {goals_home} - {goals_away}\n"
                alert += f"üßë‚Äç‚öñÔ∏è √Årbitro: {referee}\n"
                alert += f"üå¶Ô∏è Clima: {weather}"

                send_message(alert)

# --- WEBHOOK TELEGRAM ---
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    data = request.get_json()
    if "message" in data:
        msg = data["message"].get("text", "")
        if msg == "/start":
            send_message("üëã Bot ativo! Envie /jogos para ver os jogos ao vivo agora.")
        elif msg == "/jogos":
            send_message("üîé Buscando jogos ao vivo...")
            get_live_matches()
        else:
            send_message("‚ùì Comando n√£o reconhecido. Tente: /start ou /jogos")
    return "ok"

# --- ROTA PADR√ÉO ---
@app.route("/")
def home():
    return "ü§ñ Bot est√° rodando com sucesso!", 200
